########################################################################
# Packages - List of packages that can be included/linked into projects.
# Copyright (c) 1999-2008 Oliver Kreylos
# Mac OS X adaptation copyright (c) 2006 Braden Pellett
#
# This file is part of the WhyTools Build Environment.
# 
# The WhyTools Build Environment is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
# 
# The WhyTools Build Environment is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with the WhyTools Build Environment; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
# 02111-1307 USA
########################################################################

#
# System-wide libraries used by the package
#

# The Mac OS X core foundation framework
COREFOUNDATION_BASEDIR = 
COREFOUNDATION_DEPENDS = 
COREFOUNDATION_INCLUDE = -F/System/Library/Frameworks/CoreFoundation
COREFOUNDATION_LIBDIR  = 
COREFOUNDATION_LIBS    = -framework CoreFoundation

# The dynamic linker package
DL_BASEDIR = /usr
DL_DEPENDS = 
DL_INCLUDE = -I$(DL_BASEDIR)/$(INCLUDEEXT)
DL_LIBDIR  = -L$(DL_BASEDIR)/$(LIBEXT)
ifneq ($(SYSTEM_SEPARATE_LIBDL),0)
  DL_LIBS  = -ldl
else
  DL_LIBS  = 
endif

# The Linux real time package
RT_BASEDIR = /usr
RT_DEPENDS = 
RT_INCLUDE = -I$(RT_BASEDIR)/$(INCLUDEEXT)
RT_LIBDIR  = -L$(RT_BASEDIR)/$(LIBEXT)
RT_LIBS    = -lrt

# The pthreads package
PTHREADS_BASEDIR = /usr
PTHREADS_DEPENDS = 
PTHREADS_INCLUDE = -I$(PTHREADS_BASEDIR)/$(INCLUDEEXT)
PTHREADS_LIBDIR  = -L$(PTHREADS_BASEDIR)/$(LIBEXT)
ifneq ($(SYSTEM_SEPARATE_LIBPTHREAD),0)
  PTHREADS_LIBS  = -lpthread
else
  PTHREADS_LIBS  = 
endif

# The PNG image package
PNG_BASEDIR = $(shell $(VRUIPACKAGEROOT)/BuildRoot/FindLibrary.sh png.h libpng.$(DSOFILEEXT) $(INCLUDEEXT) $(LIBEXT) /usr /usr/local)
PNG_DEPENDS = 
PNG_INCLUDE = -I$(PNG_BASEDIR)/$(INCLUDEEXT)
PNG_LIBDIR  = -L$(PNG_BASEDIR)/$(LIBEXT)
PNG_LIBS    = -lpng

# The JPEG encoding/decoding package
JPEG_BASEDIR = $(shell $(VRUIPACKAGEROOT)/BuildRoot/FindLibrary.sh jpeglib.h libjpeg.$(DSOFILEEXT) $(INCLUDEEXT) $(LIBEXT) /usr /usr/local)
JPEG_DEPENDS = 
JPEG_INCLUDE = -I$(JPEG_BASEDIR)/$(INCLUDEEXT)
JPEG_LIBDIR  = -L$(JPEG_BASEDIR)/$(LIBEXT)
JPEG_LIBS    = -ljpeg

# The ALSA low-level sound library
ALSA_BASEDIR = $(shell $(VRUIPACKAGEROOT)/BuildRoot/FindLibrary.sh alsa/asoundlib.h libasound.$(DSOFILEEXT) $(INCLUDEEXT) $(LIBEXT) /usr /usr/local)
ALSA_DEPENDS = 
ALSA_INCLUDE = -I$(ALSA_BASEDIR)/$(INCLUDEEXT)
ALSA_LIBDIR  = -L$(ALSA_BASEDIR)/$(LIBEXT)
ALSA_LIBS    = -lasound

# The Mac OS X core audio framework
COREAUDIO_BASEDIR = 
COREAUDIO_DEPENDS = COREFOUNDATION
COREAUDIO_INCLUDE = -F/System/Library/Frameworks/CoreAudio
COREAUDIO_LIBDIR  = 
COREAUDIO_LIBS    = -framework CoreAudio

# The Mac OS X audio toolbox framework
AUDIOTOOLBOX_BASEDIR = 
AUDIOTOOLBOX_DEPENDS = COREAUDIO COREFOUNDATION
AUDIOTOOLBOX_INCLUDE = -F/System/Library/Frameworks/AudioToolbox
AUDIOTOOLBOX_LIBDIR  = 
AUDIOTOOLBOX_LIBS    = -framework AudioToolbox

# The user-level Bluetooth library
BLUETOOTH_BASEDIR = $(shell $(VRUIPACKAGEROOT)/BuildRoot/FindLibrary.sh bluetooth/bluetooth.h libbluetooth.$(DSOFILEEXT) $(INCLUDEEXT) $(LIBEXT) /usr /usr/local)
BLUETOOTH_DEPENDS = 
BLUETOOTH_INCLUDE = -I$(BLUETOOTH_BASEDIR)/$(INCLUDEEXT)
BLUETOOTH_LIBDIR  = -L$(BLUETOOTH_BASEDIR)/$(LIBEXT)
BLUETOOTH_LIBS    = -lbluetooth

# The basic X11 package without any toolkits/widget sets
X11_BASEDIR = /usr/X11R6
X11_DEPENDS = 
X11_INCLUDE = -I$(X11_BASEDIR)/$(INCLUDEEXT)
X11_LIBDIR  = -L$(X11_BASEDIR)/$(LIBEXT)
X11_LIBS    = -lX11

# The basic OpenGL package without window system bindings and add-on packages
ifneq ($(SYSTEM_GL_WITH_X11),0)
  GL_BASEDIR = /usr/X11R6
else
  GL_BASEDIR = /usr
endif
GL_DEPENDS   = 
GL_INCLUDE   = -I$(GL_BASEDIR)/$(INCLUDEEXT)
GL_LIBDIR    = -L$(GL_BASEDIR)/$(LIBEXT)
GL_LIBS      = -lGL
ifeq ($(SYSTEM_DARWIN_VERSION),10.5)
  GL_LIBS   += -Wl,-dylib_file,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib
endif

# The OpenGL utility package
ifneq ($(SYSTEM_GL_WITH_X11),0)
  GLU_BASEDIR = /usr/X11R6
else
  GLU_BASEDIR = /usr
endif
GLU_DEPENDS   = GL
GLU_INCLUDE   = -I$(GLU_BASEDIR)/$(INCLUDEEXT)
GLU_LIBDIR    = -L$(GLU_BASEDIR)/$(LIBEXT)
GLU_LIBS      = -lGLU

# The OpenAL audio library package
ifeq ($(SYSTEM_OPENAL_FRAMEWORK),1)
  # Use the OpenAL framework provided on Mac OS X
  OPENAL_BASEDIR = 
  OPENAL_DEPENDS = PTHREADS
  OPENAL_INCLUDE = -F/System/Library/Frameworks/OpenAL
  OPENAL_LIBDIR  = 
  OPENAL_LIBS    = -framework OpenAL
else
  # Use the standard OpenAL library
  OPENAL_BASEDIR = $(shell $(VRUIPACKAGEROOT)/BuildRoot/FindLibrary.sh AL/al.h libopenal.$(DSOFILEEXT) $(INCLUDEEXT) $(LIBEXT) /usr /usr/local)
  OPENAL_DEPENDS = PTHREADS
  OPENAL_INCLUDE = -I$(OPENAL_BASEDIR)/$(INCLUDEEXT)
  OPENAL_LIBDIR  = -L$(OPENAL_BASEDIR)/$(LIBEXT)
  OPENAL_LIBS    = -lopenal
endif

#
# Package-provided libraries
#

MYMISC_BASEDIR = $(VRUIPACKAGEROOT)
MYMISC_DEPENDS = 
MYMISC_INCLUDE = -I$(MYMISC_BASEDIR)
MYMISC_LIBDIR  = -L$(MYMISC_BASEDIR)/$(MYLIBEXT)
MYMISC_LIBS    = -lMisc.$(LDEXT)

MYPLUGINS_BASEDIR = $(VRUIPACKAGEROOT)
MYPLUGINS_DEPENDS = DL
MYPLUGINS_INCLUDE = -I$(MYPLUGINS_BASEDIR)
MYPLUGINS_LIBDIR  = -L$(MYPLUGINS_BASEDIR)/$(MYLIBEXT)
MYPLUGINS_LIBS    = -lPlugins.$(LDEXT)

MYREALTIME_BASEDIR    = $(VRUIPACKAGEROOT)
MYREALTIME_DEPENDS    = MYMISC
ifneq ($(SYSTEM_HAVE_RT),0)
  MYREALTIME_DEPENDS += RT
endif
MYREALTIME_INCLUDE    = -I$(MYREALTIME_BASEDIR)
ifneq ($(SYSTEM_HAVE_RT),0)
  MYREALTIME_CFLAGS   = -DREALTIME_HAVE_POSIX_TIMERS
endif
MYREALTIME_LIBDIR     = -L$(MYREALTIME_BASEDIR)/$(MYLIBEXT)
MYREALTIME_LIBS       = -lRealtime.$(LDEXT)

MYTHREADS_BASEDIR = $(VRUIPACKAGEROOT)
MYTHREADS_DEPENDS = PTHREADS
MYTHREADS_INCLUDE = -I$(MYTHREADS_BASEDIR)
MYTHREADS_LIBDIR  = 
MYTHREADS_LIBS    = 

MYCOMM_BASEDIR = $(VRUIPACKAGEROOT)
MYCOMM_DEPENDS = MYTHREADS MYMISC
MYCOMM_INCLUDE = -I$(MYCOMM_BASEDIR)
MYCOMM_LIBDIR  = -L$(MYCOMM_BASEDIR)/$(MYLIBEXT)
MYCOMM_LIBS    = -lComm.$(LDEXT)

MYMATH_BASEDIR = $(VRUIPACKAGEROOT)
MYMATH_DEPENDS = 
MYMATH_INCLUDE = -I$(MYMATH_BASEDIR)
MYMATH_LIBDIR  = -L$(MYMATH_BASEDIR)/$(MYLIBEXT)
MYMATH_LIBS    = -lMath.$(LDEXT)

MYGEOMETRY_BASEDIR = $(VRUIPACKAGEROOT)
MYGEOMETRY_DEPENDS = MYMATH MYMISC
MYGEOMETRY_INCLUDE = -I$(MYGEOMETRY_BASEDIR)
MYGEOMETRY_LIBDIR  = -L$(MYGEOMETRY_BASEDIR)/$(MYLIBEXT)
MYGEOMETRY_LIBS    = -lGeometry.$(LDEXT)

MYGLWRAPPERS_BASEDIR = $(VRUIPACKAGEROOT)
MYGLWRAPPERS_DEPENDS = GL
MYGLWRAPPERS_INCLUDE = -I$(MYGLWRAPPERS_BASEDIR)
MYGLWRAPPERS_CFLAGS  = -DGL_GLEXT_PROTOTYPES
MYGLWRAPPERS_LIBDIR  = -L$(MYGLWRAPPERS_BASEDIR)/$(MYLIBEXT)
MYGLWRAPPERS_LIBS    = -lGLWrappers.$(LDEXT)

MYGLSUPPORT_BASEDIR   = $(VRUIPACKAGEROOT)
MYGLSUPPORT_DEPENDS   = MYGLWRAPPERS MYMISC GL
MYGLSUPPORT_INCLUDE   = -I$(MYGLSUPPORT_BASEDIR)
MYGLSUPPORT_CFLAGS    = -DGL_GLEXT_PROTOTYPES
ifneq ($(GLSUPPORT_USE_TLS),0)
  MYGLSUPPORT_CFLAGS += -DGLSUPPORT_USE_TLS
endif
MYGLSUPPORT_LIBDIR    = -L$(MYGLSUPPORT_BASEDIR)/$(MYLIBEXT)
MYGLSUPPORT_LIBS      = -lGLSupport.$(LDEXT)

MYGLXSUPPORT_BASEDIR = $(VRUIPACKAGEROOT)
MYGLXSUPPORT_DEPENDS = MYMISC GL X11
MYGLXSUPPORT_INCLUDE = -I$(MYGLXSUPPORT_BASEDIR)
MYGLXSUPPORT_CFLAGS  = -DGL_GLEXT_PROTOTYPES
MYGLXSUPPORT_LIBDIR  = -L$(MYGLXSUPPORT_BASEDIR)/$(MYLIBEXT)
MYGLXSUPPORT_LIBS    = -lGLXSupport.$(LDEXT)

MYGLGEOMETRY_BASEDIR = $(VRUIPACKAGEROOT)
MYGLGEOMETRY_DEPENDS = MYGLSUPPORT MYGLWRAPPERS MYGEOMETRY GL
MYGLGEOMETRY_INCLUDE = -I$(MYGLGEOMETRY_BASEDIR)
MYGLGEOMETRY_LIBDIR  = -L$(MYGLGEOMETRY_BASEDIR)/$(MYLIBEXT)
MYGLGEOMETRY_LIBS    = -lGLGeometry.$(LDEXT)

MYGLMOTIF_BASEDIR = $(VRUIPACKAGEROOT)
MYGLMOTIF_DEPENDS = MYGLGEOMETRY MYGLSUPPORT MYGLWRAPPERS MYGEOMETRY MYCOMM MYMISC GL
MYGLMOTIF_INCLUDE = -I$(MYGLMOTIF_BASEDIR)
MYGLMOTIF_LIBDIR  = -L$(MYGLMOTIF_BASEDIR)/$(MYLIBEXT)
MYGLMOTIF_LIBS    = -lGLMotif.$(LDEXT)

MYIMAGES_BASEDIR    = $(VRUIPACKAGEROOT)
MYIMAGES_DEPENDS    = MYGLWRAPPERS MYMISC GL
ifneq ($(IMAGES_USE_PNG),0)
  MYIMAGES_DEPENDS += PNG
endif
ifneq ($(IMAGES_USE_JPEG),0)
  MYIMAGES_DEPENDS += JPEG
endif
MYIMAGES_INCLUDE    = -I$(MYIMAGES_BASEDIR)
MYIMAGES_LIBDIR     = -L$(MYIMAGES_BASEDIR)/$(MYLIBEXT)
MYIMAGES_LIBS       = -lImages.$(LDEXT)

MYSOUND_BASEDIR      = $(VRUIPACKAGEROOT)
MYSOUND_DEPENDS      = MYTHREADS MYMISC
ifneq ($(VRUI_USE_SOUND),0)
  ifeq ($(SYSTEM),DARWIN)
    MYSOUND_DEPENDS += AUDIOTOOLBOX COREAUDIO COREFOUNDATION
  else
    MYSOUND_DEPENDS += ALSA
  endif
endif
MYSOUND_INCLUDE      = -I$(MYSOUND_BASEDIR)/Libraries
MYSOUND_LIBDIR       = -L$(MYSOUND_BASEDIR)/$(LIBEXT)
MYSOUND_LIBS         = -lSound.$(LDEXT)

MYALSUPPORT_BASEDIR    = $(VRUIPACKAGEROOT)
MYALSUPPORT_DEPENDS    = MYTHREADS MYMISC
ifneq ($(VRUI_USE_OPENAL),0)
  MYALSUPPORT_DEPENDS += OPENAL
endif
MYALSUPPORT_INCLUDE    = -I$(MYALSUPPORT_BASEDIR)
MYALSUPPORT_LIBDIR     = -L$(MYALSUPPORT_BASEDIR)/$(MYLIBEXT)
MYALSUPPORT_LIBS       = -lALSupport.$(LDEXT)

MYVRUI_BASEDIR  = $(VRUIPACKAGEROOT)
MYVRUI_DEPENDS  = MYALSUPPORT MYSOUND MYIMAGES MYGLMOTIF MYGLGEOMETRY MYGLXSUPPORT MYGLSUPPORT
MYVRUI_DEPENDS += MYGLWRAPPERS MYGEOMETRY MYMATH MYCOMM MYTHREADS MYREALTIME MYPLUGINS MYMISC GL X11
MYVRUI_INCLUDE  = -I$(MYVRUI_BASEDIR)
MYVRUI_LIBDIR   = -L$(MYVRUI_BASEDIR)/$(MYLIBEXT)
MYVRUI_LIBS     = -lVrui.$(LDEXT)
